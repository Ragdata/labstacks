services:

    activepieces:
        image: ghcr.io/activepieces/activepieces:latest
        hostname: activepieces
        container_name: activepieces
        restart: unless-stopped
        depends_on:
            activepieces-redis:
                condition: service_healthy
            activepieces-postgres:
                condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://activepieces:80 || exit 1"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        ## Enable the following line if you already use AP_EXECUTION_MODE with SANDBOXED or old activepieces, checking the breaking change documentation for more info.
        ## privileged: true
        environment:
            AP_ENGINE_EXECUTABLE_PATH: dist/packages/engine/main.js
            AP_API_KEY: ${AP_API_KEY}
            AP_ENCRYPTION_KEY: ${AP_ENCRYPTION_KEY}
            AP_JWT_SECRET: ${AP_JWT_SECRET}
            AP_ENVIRONMENT: ${AP_ENVIRONMENT:-prod}
            AP_FRONTEND_URL: ${AP_FRONTEND_URL:-http://activepieces:80}
            AP_WEBHOOK_TIMEOUT_SECONDS: ${AP_WEBHOOK_TIMEOUT_SECONDS:-30}
            AP_TRIGGER_DEFAULT_POLL_INTERVAL: ${AP_TRIGGER_DEFAULT_POLL_INTERVAL:-5}
            AP_POSTGRES_DATABASE: activepieces
            AP_POSTGRES_HOST: activepieces-postgres
            AP_POSTGRES_PORT: 5432
            AP_POSTGRES_USERNAME: ${AP_POSTGRES_USERNAME:-postgres}
            AP_POSTGRES_PASSWORD: ${AP_POSTGRES_PASSWORD}
            AP_EXECUTION_MODE: ${AP_EXECUTION_MODE:-UNSANDBOXED}
            AP_REDIS_HOST: activepieces-redis
            AP_REDIS_PORT: 6379
            AP_FLOW_TIMEOUT_SECONDS: ${AP_FLOW_TIMEOUT_SECONDS:-600}
            AP_TELEMETRY_ENABLED: ${AP_TELEMETRY_ENABLED:-true}
            AP_TEMPLATES_SOURCE_URL: https://cloud.activepieces.com/api/v1/flow-templates
        networks:
            activepieces:
                ipv4_address: ${IPv4}
            activepieces-internal:
        ports:
            - '${HOST_PORT}:80'
        volumes:
            - activepieces-cache:/usr/src/app/cache
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [ node.role == manager ]

    activepieces-postgres:
        image: 'postgres:14.4'
        hostname: activepieces-postgres
        container_name: activepieces-postgres
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -d activepieces -U ${AP_POSTGRES_USERNAME}"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        environment:
            POSTGRES_DB: activepieces
            POSTGRES_PASSWORD: ${AP_POSTGRES_PASSWORD}
            POSTGRES_USER: ${AP_POSTGRES_USERNAME}
        networks:
            - activepieces-internal
        volumes:
            - activepieces-postgres:/var/lib/postgresql/data
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [ node.role == manager ]

    activepieces-redis:
        image: 'redis:7.0.7'
        hostname: activepieces-redis
        container_name: activepieces-redis
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping || exit 1"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_interval: 10s
            start_period: 1m
        networks:
            - activepieces-internal
        volumes:
            - activepieces-redis:/data
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [ node.role == manager ]

volumes:
    activepieces-cache:
        name: activepieces-cache
        driver: local
    activepieces-postgres:
        name: activepieces-postgres
        driver: local
    activepieces-redis:
        name: activepieces-redis
        driver: local

networks:
    activepieces:
        name: activepieces
        driver: bridge
        ipam:
            config:
                - subnet: ${SUBNET}
                  gateway: ${GATEWAY}
    activepieces-internal:
        name: activepieces-internal
        driver: bridge
        internal: true
        ipam:
            config:
                - subnet: ${SUBNET_INTERNAL}
                  gateway: ${GATEWAY_INTERNAL}
